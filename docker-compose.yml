version: '3.5'

services:
    ysf_postgres:
        build: postgres
        ports:
            - '5432:5432'
        environment:
            POSTGRES_PASSWORD: postgres
        volumes:
            - ./postgres/fixtures/init.sql:/docker-entrypoint-initdb.d/init.sql
        restart: always

    ysf_cockroachdb:
        image: cockroachdb/cockroach:latest-v21.2
        ports:
            - "26257:26257"
            - "8780:8080"
        command: start-single-node --insecure
        volumes:
            - "${PWD}/cockroach-data/crdb:/cockroach/cockroach-data"

    ysf_mysql:
        image: mysql
        command: --default-authentication-plugin=mysql_native_password
        restart: always
        environment:
            - MYSQL_ROOT_PASSWORD=password123
            - MYSQL_USER=user123
            - MYSQL_PASSWORD=password123
            - MYSQL_DATABASE=mysqldb
        ports:
            - "3306:3306"
        volumes:
            - ./www:/var/www:cached
            - ./logs/nginx:/var/www/var/logs:cached
        restart: always

    ysf_redis:
        image: redis:latest
        ports:
            - "6379:6379"
        restart: always

    ysf_nginx:
        build: nginx
        ports:
            - "88:80"
            - "8300:8000"
            - "8380:8080"
        depends_on:
            - ysf_php_fpm
            - ysf_php_fpm_latest  
        links:
            - ysf_php_fpm
            - ysf_php_fpm_latest
        volumes:
            - ./www:/var/www:cached
            - ./logs/nginx:/var/www/var/logs:cached
        restart: always

    ysf_php_fpm:
        build: php-fpm
        ports:
            - "9101:9000"
            - "3101:3001"
            - "3100:3000"
        volumes:
            - ./www:/var/www:cached
            - ./logs/nginx:/var/www/var/logs:cached
        depends_on:
            - ysf_postgres
            - ysf_mysql
            - ysf_redis
        links:
            - ysf_postgres
            - ysf_mysql
            - ysf_redis
        restart: always
    
    ysf_php_fpm_latest:
        build: php-fpm-latest
        ports:
            - "9105:9000"
            - "3104:3001"
            - "3103:3000"
        volumes:
            - ./www:/var/www:cached
            - ./logs/nginx:/var/www/var/logs:cached
        depends_on:
            - ysf_postgres
            - ysf_mysql
            - ysf_redis
        links:
            - ysf_postgres
            - ysf_mysql
            - ysf_redis
        restart: always

    ysf_adminer:
        image: adminer
        ports:
            - 8071:8080
        depends_on:
            - ysf_postgres
            - ysf_mysql
            - ysf_cockroachdb 
        links:
            - ysf_postgres
            - ysf_mysql
            - ysf_cockroachdb
        restart: always

    keycloak:
        image: quay.io/keycloak/keycloak:legacy
        environment:
            DB_VENDOR: POSTGRES
            DB_ADDR: ysf_postgres
            DB_DATABASE: keycloak
            DB_USER: postgres
            DB_SCHEMA: public
            DB_PASSWORD: postgres
            KEYCLOAK_USER: postgres
            KEYCLOAK_PASSWORD: postgres
            # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
            #JDBC_PARAMS: "ssl=true"
        ports:
            - 8689:8080
        depends_on:
            - ysf_adminer
            - ysf_postgres
        links:
            - ysf_adminer
            - ysf_postgres
        restart: always

    zookeeper:
        image: confluentinc/cp-zookeeper:7.0.1
        container_name: zookeeper
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        restart: always
        
    kafka:
        image: confluentinc/cp-kafka:7.0.1
        container_name: kafka
        ports:    
            - "9092:9092"
        depends_on:
            - zookeeper
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        restart: always

    sonarqube:
        image: sonarqube:community
        depends_on:
            - ysf_postgres
        environment:
            SONAR_JDBC_URL: jdbc:postgresql://ysf_postgres:5432/sonarcube
            SONAR_JDBC_USERNAME: postgres
            SONAR_JDBC_PASSWORD: postgres
        volumes:
            - sonarqube_data:/opt/sonarqube/data
            - sonarqube_extensions:/opt/sonarqube/extensions
            - sonarqube_logs:/opt/sonarqube/logs
        ports:
            - "9104:9000"
        restart: always
        
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
        container_name: elasticsearch
        ports:
            - 9200:9200
            - 9300:9300
        volumes:
            - elasticsearch_data:/usr/share/elasticsearch/data
        environment:
            - "discovery.type=single-node"

    kibana:
        container_name: kibana
        image: docker.elastic.co/kibana/kibana:7.4.0
        environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
        ports:
            - 5601:5601
        depends_on:
            - elasticsearch

volumes:
    sonarqube_data:
    sonarqube_extensions:
    sonarqube_logs:
    elasticsearch_data:
